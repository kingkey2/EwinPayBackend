@{
    var bc = new BackendController(); string BID = HttpContext.Current.Request.Cookies.AllKeys.Contains("BID") == true ? HttpContext.Current.Request.Cookies["BID"].Value.ToString() : "";

    var resultCheckLoginIP = bc.CheckLoginIPByCompany(BID);
    string CheckLoginPermission = "success";
    if (resultCheckLoginIP.ResultCode != BackendController.APIResult.enumResult.OK)
    {
        CheckLoginPermission = "false";
    }

}
<script src="/Company/assets/js/jquery.flot.min.js"></script>
<script src="~/Company/assets/js/jquery.flot.time.min.js"></script>
@*<script src="/Company/assets/js/jquery.flot.pie.min.js"></script>*@
<script src="/Company/assets/js/jquery.flot.resize.min.js"></script>
<script src="~/Company/assets/js/jquery.flot.axislabels.js"></script>

<div class="col-xs-12">
    <div class="row">
        <div class="col-xs-3">
            <div class="widget-box">
                <div class="widget-header widget-header-flat">
                    <h4 class="widget-title smaller">商户资讯</h4>

                </div>

                <div class="widget-body">
                    <div class="widget-main">

                        <div class="row">
                            <dl class="dl-horizontal">
                                <dt>商户代码</dt>
                                <dd id="pCompanyCode"></dd>
                                <dt>商户状态</dt>
                                <dd id="pCompanyState"></dd>
                                <dt>商户类型</dt>
                                <dd id="pCompanyType"></dd>
                                <dt>建立时间</dt>
                                <dd id="pCreateDate"></dd>
                                <dt>联系人</dt>
                                <dd id="pContacterName"></dd>
                                <dt>通讯方式</dt>
                                <dd id="pContacterMethodAccount"></dd>
                            </dl>

                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xs-3">
            <div class="widget-box">
                <div class="widget-header widget-header-flat">
                    <h4 class="widget-title smaller">钱包资料</h4>

                    <div class="widget-toolbar">

                        <button onclick="ShowCompanyPoint2()" class="btn btn-link btn-xs">
                            <i class="ace-icon fa fa-undo  bigger-110 icon-only"></i>
                        </button>
                    </div>
                </div>
                <div class="widget-body">
                    <div class="widget-main">

                        <div class="row">

                            <dl class="dl-horizontal" id="divCompanyPointDetail"></dl>

                        </div>
                    </div>
                </div>
            </div>

        </div>

        <div class="col-xs-6">
            <div class="widget-box">
                <div class="widget-header widget-header-flat">
                    <h4 class="widget-title smaller">最近14天出入款金额</h4>

                    <div class="widget-toolbar">

                    </div>
                </div>
                <div class="widget-body">
                    <div class="widget-main padding-4">
                        <div id="sales-charts" style="width: 100%; height: 145px; padding: 0px; position: relative;"></div>


                    </div><!-- /.widget-main -->
                </div>
            </div>

        </div>
    </div>
    <div class="space-6"></div>

    <div class="row">
            <div class="col-xs-12">
                <div class="widget-box">
                    <div class="widget-header widget-header-flat">
                        <h4 class="smaller">
                            商户渠道资料
                        </h4>
                    </div>

                    <div class="widget-body">
                        <div class="widget-main">

                            <table style="width:100%" class="table table-bordered table-striped table-hover dataTable nowrap" id="table_CompanyServiceTable"></table>

                        </div>
                    </div>
                </div>
            </div>
        </div>

    <div class="space-6"></div>

    <div class="row">
            <div class="col-xs-12">
                <div class="widget-box">
                    <div class="widget-header widget-header-flat">
                        <h4 class="smaller">
                            商户代付限额
                        </h4>
                    </div>

                    <div class="widget-body">
                        <div class="widget-main">

                            <table style="width:100%" class="table table-bordered table-striped table-hover dataTable nowrap" id="table_ProviderWithdrawLimit"></table>

                        </div>
                    </div>
                </div>
            </div>
        </div>

</div>



    <script>
    var Table;
    var CompanyServiceTable;
    var WithdrawLimitTable;
    var CompanyServicePointTable;
    var bankCardData;
    var modifyType;
    var companyServicePointResult;
    var isCreatedTable = false;
    var isCreatedWithdrawLimitTable = false;
    var previousLabel = null;
    var previousPoint = null;

    $(document).ready(function () {
        pageLoad();
        $.fn.UseTooltip = function UseTooltip() {
            $(this).bind("plothover", function (event, pos, item) {

                if (item) {

                    if ((previousLabel != item.series.label) || (previousPoint != item.dataIndex)) {
                        previousPoint = item.dataIndex;
                        previousLabel = item.series.label;
                        $("#tooltip").remove();

                        var x = item.datapoint[0];
                        var y = item.datapoint[1];

                        var color = item.series.color;
                        var month = gdstr(x);

                        showTooltip(item.pageX,
                            item.pageY,
                            color,
                            "<strong>" + "类型:" + item.series.label + "</strong><br><strong>" + "时间:" + month + "</strong><br><strong>" + "金额:" + toCurrency(y) + "</strong>");
                    }
                } else {

                    $("#tooltip").remove();
                    previousPoint = null;
                }
            });
        };
        $("#sales-charts").UseTooltip();
    });


    function pageLoad() {
        if ('@CheckLoginPermission' == 'false') {
                location.href = "Login.cshtml";
        }


        showCompanyPoint();
        getCompanyData();
        getCompanyServiceTableResult();
        getCompanyWithdrawLimitResult();
        getSummaryCompanyByDateResultFlot();
         wrapperFadeOut();
    };

    function gdstr(date) {
        var date= new Date(date);


        var month = date.getMonth()+1;
        var day = date.getDate();
        return month+"/"+day;
    }

    function gd(date) {
        var splitdate = date.split('-');
        var year = splitdate[0];
        var month = splitdate[1];
        var day = splitdate[2];
        return new Date(year, month - 1, day).getTime();
    }

    function getSummaryCompanyByDateResultFlot(searchData) {
        searchData = {
            "StartDate": moment().subtract(13, 'days').hour(00).minute(00),
            "EndDate": moment().hour(23).minute(59),
            "CurrencyType": "CNY"
        }

        api.getSummaryCompanyByDateResultFlot(searchData, function (success, obj) {
            var beforeDay = [];
            for (var i = 0; i < 14; i++) {
                beforeDay.push(moment().subtract(i, 'days').format('YYYY-MM-DD'));
            }

            if (obj.ResultCode == 0) {
                var paymentData = [];
                var withdrawData = [];
                    var datas = obj.SummaryCompanyByDates;
                for (var i = 0; i < datas.length; i++) {
                    var index = beforeDay.indexOf(datas[i].SummaryDate)
                    if (index >= 0) {

                        withdrawData.push([gd(datas[i].SummaryDate),datas[i].TotalWithdrawalAmount]);
                        paymentData.push([gd(datas[i].SummaryDate), datas[i].TotalNetAmount]);
                    } else {
                        withdrawData.push([gd(beforeDay[index]), 0]);
                        paymentData.push([gd(beforeDay[index]), 0]);
                    }

                }

                    $.plot("#sales-charts", [
                        { label: "代付", data: withdrawData },
                        { label: "充值", data: paymentData }
                    ], {
                            hoverable: true,
                            shadowSize: 5,
                            series: {
                                lines: { show: true },
                                points: {
                                    radius: 5,
                                    fill: true,
                                    show: true
                                }
                            },
                            xaxis: {
                                mode: "time",
                                timeformat: "%m/%d",
                                tickSize: [1, "day"],
                                color: "black"


                            },
                            yaxis: {
                                color: "black"
                            },
                            grid: {
                                hoverable: true,
                                borderWidth: 2,
                                borderColor: "#633200",
                                backgroundColor: { colors: ["#ffffff", "#EDF5FF"] }
                            }
                        });

            }
        });
    }

    function showTooltip(x, y, color, contents) {
        $('<div id="tooltip">' + contents + '</div>').css({
            position: 'absolute',
            display: 'none',
            top: y - 40,
            left: x - 120,
            border: '2px solid ' + color,
            padding: '3px',
            'font-size': '9px',
            'border-radius': '5px',
            'background-color': '#fff',
            'font-family': 'Verdana, Arial, Helvetica, Tahoma, sans-serif',
            opacity: 0.9
        }).appendTo("body").fadeIn(200);
    }

    function getCompanyData() {
        api.getCompanyByID(function (success, obj) {
            if (obj.ResultCode == 0) {
                showCompanyDetail(obj)
            } else {
                switch (obj.ResultCode) {
                    case 4:
                        parent.errorAlertCallback("权限不足", function () {
                            parent.ChangePage("Home");
                            parent.CloseActivePage(window.frameElement.id.split('_')[1]);
                        });
                        break;
                    case 7:
                        parent.errorAlert("您已断线请重新登入", "Login.cshtml");
                        break;
                    default:
                        parent.warningAlert("其他错误");
                        break;
                }
            }
        });


    }

    function showCompanyDetail(data) {

        CSeleData = data.CompanyData;
        $("#pCompanyID").text(CSeleData["CompanyID"]);
        $("#pCompanyName").text(CSeleData["CompanyName"]);
        $("#pCompanyCode").text(CSeleData["CompanyCode"]);


        $("#pCompanyState").html(CSeleData["CompanyState"] == 0 ? '<span style="color: blue;">正常</span>' : '<span style="color: red;">停用</span>');
        switch (CSeleData["CompanyType"]) {
            case 0:
                $("#pCompanyType").html('<span style="color: red;">系统商</span>');
                break;
            case 1:
                $("#pCompanyType").html('<span style="color: black;">一般商户</span>');
                break;
            case 2:
                $("#pCompanyType").html('<span style="color: blue;">代理商户</span>');
                break;
            case 3:
                $("#pCompanyType").html('<span style="color: orange;">专属供应商</span>');
                break;
            default:
                $("#pCompanyType").html('<span style="color: red;">Error</span>');
                break;
        }

        $("#pCreateDate").text(CSeleData["CreateDate"].replace("T", " "));
        $("#pContacterName").text(CSeleData["ContacterName"]);
        $("#pContacterMobile").text(CSeleData["ContacterMobile"]);
        $("#pContacterMethodAccount").text(CSeleData["ContacterMethodAccount"]);
    }

    function showCompanyPoint() {
        $("#divCompanyPointDetail").empty();
        var strCompanyPointDetail = "";

        api.getCompanyPointTableResult(AdminObject.forCompanyID, function (s, o) {
            if (s) {
                if (o.ResultCode == 0) {
                    $.each(o.CompanyPoints, function (i, item) {

                        var canUsePoint = toCurrency(o.CompanyPoints[i].PointValue - o.CompanyPoints[i].LockPointValue - o.CompanyPoints[i].FrozenPoint);
                        strCompanyPointDetail += ` <dt>币别</dt>
                                                    <dd>${o.CompanyPoints[i].CurrencyType}</dd>
                                                    <dt>帐户金额</dt>
                                                    <dd class="PointValue_${o.CompanyPoints[i].CurrencyType}">${toCurrency(o.CompanyPoints[i].PointValue)}</dd>
                                                    <dt>可用金额</dt>
                                                    <dd class="CanUsePoint_${o.CompanyPoints[i].CurrencyType}">${canUsePoint}</dd>
                                                    <dt>不可用金额</dt>
                                                    <dd class="LockPointValue_${o.CompanyPoints[i].CurrencyType}">${ toCurrency(o.CompanyPoints[i].LockPointValue)}</dd>
                                                    <dt>冻结金额</dt>
                                                    <dd class="FrozenPoint_${o.CompanyPoints[i].CurrencyType}">${toCurrency(o.CompanyPoints[i].FrozenPoint)}</dd>
                                                    <dt>代付余额</dt>
                                                    <dd class="AutoWithdrawAmount_${o.CompanyPoints[i].CurrencyType}">${toCurrency(o.CompanyPoints[i].AutoWithdrawAmount)}</dd>`
                    });


                    $("#divCompanyPointDetail").html(strCompanyPointDetail);

                } else {
                    switch (o.ResultCode) {
                        case 4:
                            parent.errorAlertCallback("权限不足", function () {
                                loadHomePage();
                            });
                            break;
                        case 5:
                            $('#divCompanyPointDetail').html('<div class="span6" style="float: none; margin: 0 auto;"><h6>尚未設定錢包</h6></div>');
                            break;
                        case 7:
                            errorAlert("您已断线请重新登入", "Login.cshtml");
                            break;
                        default:
                            warningAlert("其他错误");
                            break;
                    }
                }
            }
        });
        $("#divCompanyPoint").show();
    }

    function ShowCompanyPoint2() {

        api.getCompanyPointTableResult(AdminObject.forCompanyID, function (s, o) {
            if (s) {
                if (o.ResultCode == 0) {
                    $.each(o.CompanyPoints, function (i, item) {
                        var canUsePoint = toCurrency(o.CompanyPoints[i].PointValue - o.CompanyPoints[i].LockPointValue - o.CompanyPoints[i].FrozenPoint);
                        $('.PointValue_' + o.CompanyPoints[i].CurrencyType).text(toCurrency(o.CompanyPoints[i].PointValue));
                        $('.CanUsePoint_' + o.CompanyPoints[i].CurrencyType).text(canUsePoint);
                        $('.LockPointValue_' + o.CompanyPoints[i].CurrencyType).text(toCurrency(o.CompanyPoints[i].LockPointValue));
                        $('.FrozenPoint_' + o.CompanyPoints[i].CurrencyType).text(toCurrency(o.CompanyPoints[i].FrozenPoint));
                        $('.AutoWithdrawAmount_' + o.CompanyPoints[i].CurrencyType).text(toCurrency(o.CompanyPoints[i].AutoWithdrawAmount));
                    });
                } else {
                    switch (o.ResultCode) {
                        case 4:
                            parent.errorAlertCallback("权限不足", function () {
                                loadHomePage();
                            });
                            break;
                        case 5:
                            $('#divCompanyPointDetail').html('<div class="span6" style="float: none; margin: 0 auto;"><h6>尚未設定錢包</h6></div>');
                            break;
                        case 7:
                            errorAlert("您已断线请重新登入", "Login.cshtml");
                            break;
                        default:
                            warningAlert("其他错误");
                            break;
                    }
                }
            }
        });
    }

    function createCompanyServiceTable(data) {
        isCreatedTable = true;

        CompanyServiceTable = $("#table_CompanyServiceTable").DataTable({
            data: data,
            columns: [
                { "title": "支付方式", "data": "ServiceTypeName" },
                { "title": "渠道数量", "data": "GPayRelationCount", "visible": false },

                {
                    "title": "状态", "data": "State",
                    "render": function (data) {
                        if (data == 0) {
                            return '<span style="color:blue;">启用</span>';
                        } else {
                            return '<span style="color:red;">停用</span>';
                        }
                    }
                },
                //{ "title": "幣別", "data": "CurrencyType" },
                { "title": "费率(%)", "data": "CollectRate" },
                {
                    "title": "单笔限额(低)", "data": "MinOnceAmount",
                    "render": function (data, display, rowdata) {
                        return toCurrency(data);
                    }
                },
                {
                    "title": "单笔限额(高)", "data": "MaxOnceAmount",
                    "render": function (data, display, rowdata) {
                        return toCurrency(data);
                    }
                },
                {
                    "title": "每日交易最大用量", "data": "MaxDaliyAmount",
                    "render": function (data, display, rowdata) {
                        return toCurrency(data);
                    }
                }
                //{
                //    "title": "(剩餘可下發用量)", "data": "MaxDaliyAmountByUse",
                //    "render": function (data, display, rowdata) {
                //        return toCurrency(data);
                //    }
                //},
                //{
                //    "title": "費率(/次)", "data": "CollectCharge",
                //    "render": function (data, display, rowdata) {
                //        return toCurrency(data);
                //    }
                //}
                //{
                //    "title": "設備類型", "data": "DeviceType",
                //    "render": function (data) {
                //        if (data == 0) {
                //            return 'PC';
                //        } else {
                //            return '手機';
                //        }
                //    }
                //}
            ],
            rowCallback: function (row, data) { },
            autoWidth: true,
            filter: true,         //右上搜尋
            info: false,
            ordering: true, //排序
            processing: true,
            retrieve: true,
            paging: true,    //分頁
            scrollX: true,
            autoWidth: false,
            language: chineseTableLang
        });

        //if (AdminObject.CompanyType == 0) {
        //    CompanyServiceTable.column(1).visible(true);
        //}

        $('#table_CompanyServiceTable tbody').on('click', 'tr', function () {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            } else {
                CompanyServiceTable.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
        });
        debugger;
        if ($('#table_ProviderWithdrawLimit_wrapper').width() < $('#table_ProviderWithdrawLimit_wrapper table').width()) {
            WithdrawLimitTable.columns.adjust();
        }
      
    }

    function getCompanyServiceTableResult() {
        api.getCompanyServiceTableResult(AdminObject.forCompanyID, function (success, obj) {
            if (isCreatedTable) {
                CompanyServiceTable.clear().draw();
            }

            if (obj.ResultCode == 0) {
                if (!isCreatedTable) {
                    createCompanyServiceTable(obj.CompanyServiceResults);

                } else {
                    CompanyServiceTable.rows.add(obj.CompanyServiceResults).draw();
                }

            } else {
                switch (obj.ResultCode) {
                    case 4:
                        parent.errorAlertCallback("权限不足", function () {
                            parent.ChangePage("Home");
                            parent.CloseActivePage(window.frameElement.id.split('_')[1]);
                        });
                        break;
                    case 5:
                        //warningAlert("沒有資料");
                        break;
                    case 7:
                        parent.errorAlert("您已断线请重新登入", "Login.cshtml");
                        break;
                    default:
                        parent.warningAlert("其他错误");
                        break;
                }
                parent.wrapperFadeOut();
            }
        });
    }

    function CreateWithdrawLimitTable(data) {

        WithdrawLimitTable = $('#table_ProviderWithdrawLimit').DataTable({
            data: data,
            columns: [
                { "title": "币别", "data": "CurrencyType" },
                {
                    "title": "单笔交易最低金额", "data": "MinLimit",
                    "render": function (data, display, rowdata) {
                        return toCurrency(data);
                    }
                },
                {
                    "title": "单笔交易最高金额", "data": "MaxLimit",
                    "render": function (data, display, rowdata) {
                        return toCurrency(data);
                    }
                },
                {
                    "title": "手续费", "data": "Charge",
                    "render": function (data, display, rowdata) {
                        return toCurrency(data);
                    }
                }
            ],
            rowCallback: function (row, data) { },
            autoWidth: true,
            filter: true,         //右上搜尋
            info: false,
            ordering: true, //排序
            processing: true,
            retrieve: true,
            paging: true,    //分頁
            scrollX: true,
            autoWidth: false,
          
            language: chineseTableLang
        });

        $('#table_ProviderWithdrawLimit tbody').on('click', 'tr', function () {
            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            } else {
                WithdrawLimitTable.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
        });
        debugger;
        if ($('#table_CompanyServiceTable_wrapper').width() < $('#table_CompanyServiceTable_wrapper table').width()) {
            CompanyServiceTable.columns.adjust();
        }
    }

    function getCompanyWithdrawLimitResult() {
        //companyid , providercode, WithdrawLimitType,由於是要取得供應商資料,所以companyid帶入0, WithdrawLimitType帶入0 (0=Provider/1=Company)
        api.getWithdrawLimitResult(AdminObject.forCompanyID, "", 1, function (success, obj) {

            if (isCreatedWithdrawLimitTable) {
                WithdrawLimitTable.clear().draw();
            }

            if (obj.ResultCode == 0) {
                if (!isCreatedWithdrawLimitTable) {
                    isCreatedWithdrawLimitTable = true;
                    CreateWithdrawLimitTable(obj.WithdrawLimits);

                } else {
                    WithdrawLimitTable.rows.add(obj.WithdrawLimits).draw();

                }
                parent.wrapperFadeOut();
            } else {
                switch (obj.ResultCode) {
                    case 7:
                        parent.errorAlert("您已断线请重新登入", "Login.cshtml");
                        break;
                    default:
                        //warningAlert("其他錯誤");
                        break;
                }
                parent.wrapperFadeOut();
            }
        });
    }

    </script>
